[{"C:\\Users\\61433\\Desktop\\WebDev\\notemaker\\src\\index.js":"1","C:\\Users\\61433\\Desktop\\WebDev\\notemaker\\src\\App.js":"2","C:\\Users\\61433\\Desktop\\WebDev\\notemaker\\src\\Components\\ListInput.js":"3","C:\\Users\\61433\\Desktop\\WebDev\\notemaker\\src\\Components\\ListItem.js":"4","C:\\Users\\61433\\Desktop\\WebDev\\notemaker\\src\\Components\\Background.js":"5","C:\\Users\\61433\\Desktop\\WebDev\\notemaker\\src\\Components\\Theme.js":"6","C:\\Users\\61433\\Desktop\\WebDev\\notemaker\\src\\Components\\Time.js":"7","C:\\Users\\61433\\Desktop\\WebDev\\notemaker\\src\\Components\\Quotes.js":"8"},{"size":133,"mtime":1608699339763,"results":"9","hashOfConfig":"10"},{"size":1320,"mtime":1608777630985,"results":"11","hashOfConfig":"10"},{"size":2265,"mtime":1608777397854,"results":"12","hashOfConfig":"10"},{"size":1085,"mtime":1608769837807,"results":"13","hashOfConfig":"10"},{"size":970,"mtime":1608778190790,"results":"14","hashOfConfig":"10"},{"size":203,"mtime":1608769629877,"results":"15","hashOfConfig":"10"},{"size":664,"mtime":1608778190013,"results":"16","hashOfConfig":"10"},{"size":705,"mtime":1608778839962,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"heguep",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\61433\\Desktop\\WebDev\\notemaker\\src\\index.js",[],["36","37"],"C:\\Users\\61433\\Desktop\\WebDev\\notemaker\\src\\App.js",[],"C:\\Users\\61433\\Desktop\\WebDev\\notemaker\\src\\Components\\ListInput.js",["38"],"import React from 'react'\r\nimport {Grid, Button} from '@material-ui/core';\r\nimport {useState, useRef, useEffect} from 'react';\r\n// import {Box} from '@material-ui/core';\r\nimport ListItem from './ListItem';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport BLUE from '@material-ui/core/colors/blue';\r\n\r\n\r\nexport default function ListInput() {\r\n    const blue = BLUE[200];\r\n    const [term, setTerm] = useState('');\r\n    const [termList, setTermList] = useState([]);\r\n    const inputCont = useRef(\"\");\r\n    const [exp, setExp] = useState([]);\r\n\r\n    const onSubmitHandler = (e) =>{ \r\n        setTermList([...termList, term])\r\n        setTerm(\"\");\r\n    }    \r\n\r\n    \r\n    function validator(termList){\r\n        while (termList.length > 6){\r\n            setTermList(termList.slice(1, termList.length - 1))\r\n            break;\r\n        }\r\n    }\r\n    function handleDelete(term){\r\n        const newList = termList.filter(el => el !== term)\r\n        setTermList(newList)\r\n    }\r\n    useEffect(()=> {\r\n        let genListItems = termList.map((el, i) => {return el === \"\" ? null : (<ListItem handleDelete = {handleDelete} key = {i} term = {el} termId = {i}></ListItem>)});\r\n        validator(termList)\r\n        setExp(genListItems)\r\n    }, [termList])\r\n\r\n    return (\r\n\r\n        // Form Begins.\r\n        <form ref = {inputCont} onSubmit = {e => e.preventDefault()}>\r\n\r\n        <Grid container alignItems = \"center\" justify = \"center\" spacing = {1} style = {{ width : '30vw', marginLeft : '2em'}}>\r\n\r\n            {/* Text Input */}\r\n            <Grid item xs = {10}>\r\n                <input style = {{color : 'white'}}value = {term} onChange = {e => setTerm(e.target.value)} id = \"textfield\"/>\r\n            </Grid>\r\n\r\n            {/* Add Button */}\r\n            <Grid item xs = {2}>\r\n                <Button  style={{maxWidth: '7.5vw', maxHeight: '2vh', minWidth: '15px', minHeight: '30px'}} onClick = {e => onSubmitHandler(e)} type = \"submit\" color = \"primary\" size = \"small\" variant = \"outlined\"> <AddIcon color = {blue}></AddIcon> </Button> \r\n            </Grid>\r\n\r\n        </Grid>\r\n\r\n            {/* Generated List */}\r\n        <Grid container xs = {12} justify = \"center\" style = {{margin : '2em 0'}}> \r\n        {exp}  </Grid>\r\n        </form>\r\n        \r\n    )\r\n}\r\n","C:\\Users\\61433\\Desktop\\WebDev\\notemaker\\src\\Components\\ListItem.js",[],"C:\\Users\\61433\\Desktop\\WebDev\\notemaker\\src\\Components\\Background.js",[],"C:\\Users\\61433\\Desktop\\WebDev\\notemaker\\src\\Components\\Theme.js",[],"C:\\Users\\61433\\Desktop\\WebDev\\notemaker\\src\\Components\\Time.js",[],"C:\\Users\\61433\\Desktop\\WebDev\\notemaker\\src\\Components\\Quotes.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":37,"column":8,"nodeType":"45","endLine":37,"endColumn":18,"suggestions":"46"},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleDelete'. Either include it or remove the dependency array.","ArrayExpression",["49"],"no-global-assign","no-unsafe-negation",{"desc":"50","fix":"51"},"Update the dependencies array to be: [handleDelete, termList]",{"range":"52","text":"53"},[1236,1246],"[handleDelete, termList]"]